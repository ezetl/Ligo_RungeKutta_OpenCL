TODO:
- Hacer setup.py file
- Encontrar otra forma de hacer switch entre float64 y float32
- Preguntar como tienen que ser las condiciones iniciales para generarlas automaticamente

Ideas:
- los aij, tal vez convenga ponerlos en matrices en el device
- tolerance for solver: probar con otros numeros a ver que da (con max time step tambien)
- en vez de hacer funciones separadas, hacer una clase que envuelva todo el proceso del device y las 
funciones
- para generar las condiciones iniciales, hacer un yield de la condicion generada. De esa forma se 
  podria iterar sobre las condiciones iniciales como:
  			for cond in generate_init_cond():
  				etc etc
- Va a haber un kernel para el ode45, y un kernel para el rhs tambien. Ver como llamar a un kernel desde dentro de otro

Preguntas:
- que se guarda en el vector 'ya'? es la evolucion de una particula en distintas etapas? siempre da lo mismo en todos los slots
- rhs tiene pinta de kernel, ode45 tambien
- Como carajo definir arrays locales en los kernels
- Como llamar a un kernel dentro de otro, se puede?
